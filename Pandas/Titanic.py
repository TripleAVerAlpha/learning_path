import pandas
from LIB.write_readme import add_readme

dir_ = "Pandas/"
answer = "# Предобработка данных"
answer = add_readme("Задание", {"Текст": "Используя датасет ответьте на вопросы:"
                                         "- Какое количество мужчин и женщин ехало на корабле? В качестве ответа приведите два числа через пробел."
                                         "- Какой части пассажиров удалось выжить? Посчитайте долю выживших пассажиров. Ответ приведите в процентах (число в интервале от 0 до 100, знак процента не нужен), округлив до двух знаков."
                                         "- Какую долю пассажиры первого класса составляли среди всех пассажиров? Ответ приведите в процентах (число в интервале от 0 до 100, знак процента не нужен), округлив до двух знаков."
                                         "- Какого возраста были пассажиры? Посчитайте среднее и медиану возраста пассажиров. В качестве ответа приведите два числа через пробел."
                                         "- Коррелируют ли число братьев/сестер/супругов с числом родителей/детей? Посчитайте корреляцию Пирсона между признаками SibSp и Parch."
                                         "- Какое самое популярное женское имя на корабле? Извлеките из полного имени пассажира (колонка Name) его личное имя (First Name). Это задание — типичный пример того, с чем сталкивается специалист по анализу данных. Данные очень разнородные и шумные, но из них требуется извлечь необходимую информацию. Попробуйте вручную разобрать несколько значений столбца Name и выработать правило для извлечения имен, а также разделения их на женские и мужские.\n\n".replace("-", "\n-")}, answer)

titanic = pandas.read_csv('Pandas/Data/titanic.csv', index_col='PassengerId')
answer = add_readme("Входные данные", {"Таблица": titanic.head()}, answer)
f = titanic.groupby('Sex').count()['Survived']['female']
m = titanic.groupby('Sex').count()['Survived']['male']
answer = add_readme("Какое количество мужчин и женщин ехало на корабле?", {"Текст": f"Мужчин: {m}<br>"
                                                                                    f"Женщин: {f}"}, answer)

c = round(titanic['Survived'].sum() / titanic['Survived'].count() * 100, 2)
answer = add_readme("Какой части пассажиров удалось выжить?", {"Текст": f"Часть выжевших: {c}"}, answer)

c = round(titanic[titanic['Pclass'] == 1].count()['Pclass'] / titanic['Pclass'].count() * 100, 2)
answer = add_readme("Какую долю пассажиры первого класса составляли среди всех пассажиров?", {"Текст": f"Первый класс: {c}"}, answer)

sr = round(titanic['Age'].mean(), 2)
m = titanic['Age'].median()
answer = add_readme("Какого возраста были пассажиры?", {"Текст": f"Средний возраст: {sr}<br>"
                                                                 f"Медиана: {m}"}, answer)

c = round(titanic.corr().loc['SibSp', 'Parch'], 2)
answer = add_readme("Коррелируют ли число братьев/сестер/супругов с числом родителей/детей?", {"Текст": f"Кореляция Пирсона: {c}"}, answer)

name = titanic[titanic['Sex'] == 'female']['Name'].str.split(" ").str[2].str.replace("(", "")
n = name.groupby(name).count().sort_values()[::-1].index[0]
answer = add_readme("Какое самое популярное женское имя на корабле?", {"Текст": f"{n}"}, answer)

with open(dir_ + "README.md", "w") as readme:
    readme.write(answer)
